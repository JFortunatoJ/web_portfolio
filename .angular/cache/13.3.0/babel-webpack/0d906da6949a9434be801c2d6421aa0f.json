{"ast":null,"code":"import projectsDataFile from 'src/assets/projectsData.json';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ContentProjectsService = /*#__PURE__*/(() => {\n  class ContentProjectsService {\n    constructor() {\n      this.data = projectsDataFile;\n    } // tslint:disable-next-line:typedef\n\n\n    getAllProfessionalProjects() {\n      return new Observable(observer => {\n        observer.next(this.data.MainScreenInfo.ProfessionalProjects);\n        observer.complete();\n      }); // return this.db.list<Project>('MainScreenInfo/ProfessionalProjects').snapshotChanges();\n    } // tslint:disable-next-line:typedef\n\n\n    getAllPersonalProjects() {\n      return new Observable(observer => {\n        observer.next(this.data.MainScreenInfo.PersonalProjects);\n        observer.complete();\n      }); // return this.db.list<Project>('MainScreenInfo/PersonalProjects').snapshotChanges();\n    } // tslint:disable-next-line:typedef\n\n\n    getProfessionalProject(id) {\n      return new Observable(observer => {\n        observer.next(this.data.MainScreenInfo.ProfessionalProjects.find(p => p.thumbUrl === id));\n        observer.complete();\n      }); // return this.db.object<Project>('MainScreenInfo/ProfessionalProjects/' + id).snapshotChanges();\n    } // tslint:disable-next-line:typedef\n\n\n    getPersonalProject(id) {\n      return new Observable(observer => {\n        observer.next(this.data.MainScreenInfo.PersonalProjects.find(p => p.thumbUrl === id));\n        observer.complete();\n      }); // return this.db.object<Project>('MainScreenInfo/PersonalProjects/' + id).snapshotChanges();\n    }\n\n  }\n\n  ContentProjectsService.ɵfac = function ContentProjectsService_Factory(t) {\n    return new (t || ContentProjectsService)();\n  };\n\n  ContentProjectsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContentProjectsService,\n    factory: ContentProjectsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContentProjectsService;\n})();","map":null,"metadata":{},"sourceType":"module"}