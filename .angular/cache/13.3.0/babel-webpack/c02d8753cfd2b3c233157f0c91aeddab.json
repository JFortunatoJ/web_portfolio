{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nlet ProjectModalComponent = class ProjectModalComponent {\n  constructor(projectViewService) {\n    this.projectViewService = projectViewService;\n    this.isVisible = false;\n    this.getProject = projectViewService.projectView$.subscribe(project => {\n      this.showProject(project);\n    });\n  }\n\n  ngOnInit() {\n    window.scroll(0, 0);\n  }\n\n  ngOnDestroy() {\n    this.getProject.unsubscribe();\n  }\n\n  showProject(project) {\n    this.project = project;\n    this.setVisibility(true);\n  }\n\n  setVisibility(status) {\n    this.isVisible = status;\n  }\n\n};\nProjectModalComponent = __decorate([Component({\n  selector: 'app-project-modal',\n  templateUrl: './project-modal.component.html',\n  styleUrls: ['./project-modal.component.css'],\n  animations: [// fundo escuro que fica atrás do modal\n  trigger('overlay', [transition(':enter', [// Inicia com o opacity zerado\n  style({\n    opacity: 0\n  }), // efetua a animação de 250ms para o\n  // o opacity de 0 até 0.5\n  animate('250ms', style({\n    opacity: .5\n  }))]), transition(':leave', [// Quando for esconder o overlay,\n  // anima do opacity atual, 0.5, até\n  // o valor 0\n  animate('500ms', style({\n    opacity: 0\n  }))])]), // animação na parte branca do modal\n  trigger('modal', [transition(':enter', [// inicia com o modal \"lá em cima\"\n  style({\n    top: -999\n  }), // e finaliza com o modal no meio da tela\n  animate('500ms', style({\n    top: '50%'\n  }))]), transition(':leave', [// para esconder o modal, basta\n  // \"jogar ele lá para cima da tela\"\n  animate('250ms', style({\n    top: -999\n  }))])])]\n})], ProjectModalComponent);\nexport { ProjectModalComponent };","map":null,"metadata":{},"sourceType":"module"}